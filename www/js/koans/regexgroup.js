jshero.koans.add({id:"regexgroup",title:"Regex: Gruppen",lesson:"Klammern hatten wir schon kennengelernt. Sie begrenzen die Anwendung eines Operators auf den eingeklammerten\nBereich. Klammern haben aber noch eine weitere wichtige Funktion. Eingeklammerte Bereiche definieren eine Gruppe.\nDiese Gruppen werden von 1 bis 9 durchnummeriert. Mit <code>\\1</code> bis <code>\\9</code> kann man innerhalb des Regex\nauf eine Gruppe zugreifen. Dabei wird der durch die Gruppe zuvor gefundene String referenziert.\nSo ist es m\xF6glich nach Wiederholungen zu suchen.<br>\n<code>/([a-z])\\1/</code> findet doppelte Kleinbuchstaben und <code>/(\\d)(\\d).*\\1\\2/</code>\nfindet doppelte zweistellige Zahlen.\n\n<pre><code>let t1 = /([a-z])\\1/.test('Affe'); // true\nlet t2 = /(\\d)(\\d).*\\1\\2/.test(12 mal 12'); // true</code></pre>",task:"Schreibe eine Funktion <code>test</code>, die feststellt, ob ein String ein doppeltes Wort enth\xE4lt.\nEin Wort soll aus mindestens einem Buchstaben bestehen. Zugrunde liegt das englische Alphabet.\n<br><br>Beispiel: <code>test('Apfel Birne Apfel')</code> sollte\ntrue und <code>test('Apfel Birne')</code> sollte <code>false</code> ergeben.",tests:[function(){return jshero.testutil.assert_isFunction("test")},function(){return jshero.testutil.assert_functionHasNumOfParameter("test",1)},function(){return jshero.testutil.assert_functionReturns("test('a a')",true)},function(){return jshero.testutil.assert_functionReturns("test('aa a')",false)},function(){return jshero.testutil.assert_functionReturns("test('a aa')",false)},function(){return jshero.testutil.assert_functionReturns("test('Apfel Apfel')",true)},function(){return jshero.testutil.assert_functionReturns("test('Apfel Birne Apfel')",true)},function(){return jshero.testutil.assert_functionReturns("test('Apfel Birne')",false)},function(){return jshero.testutil.assert_functionReturns("test('ApfelApfel')",false)},function(){return jshero.testutil.assert_functionReturns("test('Apfel Apfelmus')",false)},function(){return jshero.testutil.assert_functionReturns("test('ein rein')",false)},function(){return jshero.testutil.assert_functionReturns("test('fein rein')",false)},function(){return jshero.testutil.assert_functionReturns("test('1 1')",false)}]});